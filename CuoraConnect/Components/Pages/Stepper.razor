@page "/"
@using CuoraConnect.Models
@inject PagesStepper PagesStepper
@inject LicenseService LicenseService

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

@if (isLicenseValid)
{
    <MudPaper id="pop-up" Style="margin: 30px 15px 40px 15px; padding: 0px !important;">
        <div class="barCardImport" />
        <MudStepper @bind-ActiveIndex="@PagesStepper.page" NonLinear CenterLabels="true" ShowResetButton>
            <MudStep Title="Passo 1" SecondaryText="Wi-Fi do seu Comércio">
                <Home></Home>
            </MudStep>
            <MudStep Title="Passo 2" SecondaryText="Informações do Wi-Fi">
                <Wi_FiConfig></Wi_FiConfig>
            </MudStep>
            <MudStep Title="Passo 3" SecondaryText="Enviar configuração">
                <SendConfig></SendConfig>
            </MudStep>
        </MudStepper>
    </MudPaper>
}
else if (isConnectedInternet && !isLicenseValid)
{
    <MudAlert Severity="Severity.Error">
        A licença está vencida. Entre em contato com o suporte.
    </MudAlert>
}
else
{
    <MudAlert Severity="Severity.Info">
        Você não está conectado à internet.
    </MudAlert>
}

@code {

    private bool isLicenseValid;
    private bool isConnectedInternet;

    protected override async Task OnInitializedAsync()
    {
        PagesStepper.OnPageChanged += StateHasChanged;

        // Verificar licença ao iniciar a página
        await CheckLicenseStatusAsync();
    }

    private async Task CheckLicenseStatusAsync()
    {
        await LicenseService.CheckLicenseAsync();
        isLicenseValid = LicenseService.IsLicenseValid;
        isConnectedInternet = LicenseService.IsConnectedInternet;

        // Atualiza a UI
        StateHasChanged();
    }

    public void Dispose()
    {
        PagesStepper.OnPageChanged -= StateHasChanged;
    }
}
